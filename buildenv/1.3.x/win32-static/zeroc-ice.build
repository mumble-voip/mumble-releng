#!/usr/bin/env mumble-build
# Copyright 2013-2014 The 'mumble-releng' Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that
# can be found in the LICENSE file in the source tree or at
# <http://mumble.info/mumble-releng/LICENSE>.

urls=(
	"http://releng-distfiles.mumble.info/releng-distfiles/ice-3.6.3.tar.gz"
	"https://github.com/zeroc-ice/ice/archive/v3.6.3.tar.gz#fn=ice-3.6.3.tar.gz"
)

digests=(
	"sha1:9d18e11afa53669ac68c778f95ccb4ada6801967"
	"sha256:82ff74e6d24d9fa396dbb4d9697dc183b17bc9c3f6f076fecdc05632be80a2dc"
)

function extract {
	tar -zxf ice-3.6.3.tar.gz
	cd ice-3.6.3
}

function prepare {
	patch -p1 < ${MUMBLE_BUILDENV_ROOT}/patches/zeroc-ice-3.6.1-win32-static.patch
	patch -p1 < ${MUMBLE_BUILDENV_ROOT}/patches/zeroc-ice-3.6.1-iceutil-c++11-for-MSVS2012-and-greater.diff
	patch -p1 < ${MUMBLE_BUILDENV_ROOT}/patches/zeroc-ice-3.6.1-fix-win8sdk-deprecation-warning-in-IceGrid.patch
	patch -p1 < ${MUMBLE_BUILDENV_ROOT}/patches/zeroc-ice-3.5.1-fix-win8sdk-deprecation-warning-in-Ice-binding-test.patch
	patch -p1 < ${MUMBLE_BUILDENV_ROOT}/patches/zeroc-ice-3.6.1-no-install-pds.patch
	patch -p1 < ${MUMBLE_BUILDENV_ROOT}/patches/zeroc-ice-3.6.1-ice-ice-h-include-icessl-config-h.patch
	patch -p1 < ${MUMBLE_BUILDENV_ROOT}/patches/zeroc-ice-3.6.1-test-icediscovery-simple-linkwith.patch
	patch -p1 < ${MUMBLE_BUILDENV_ROOT}/patches/zeroc-ice-3.6.3-nuke-nuget.patch
	patch -p1 < ${MUMBLE_BUILDENV_ROOT}/patches/zeroc-ice-3.6.1-winxp-dont-use-native-inet-pton.patch
	patch -p1 < ${MUMBLE_BUILDENV_ROOT}/patches/zeroc-ice-3.6.1-iceutil-disable-win32-stacktraces.patch
	patch -p1 < ${MUMBLE_BUILDENV_ROOT}/patches/zeroc-ice-3.6.1-user-configurable-win32-winnt.patch
	patch -p1 < ${MUMBLE_BUILDENV_ROOT}/patches/zeroc-ice-3.6.1-wc-err-invalid-chars-xp-fix.patch
	patch -p1 < ${MUMBLE_BUILDENV_ROOT}/patches/zeroc-ice-3.6.1-allow-schannel-engine-to-build-against-xp-and-vista-win32-winnt.patch
}

function build {
	if [ "${MUMBLE_BUILD_CONFIGURATION}" == "Release" ]; then
		LIBBZ2_LIB="libbz2.lib"
		LIBDB_LIB="libdb53.lib"
		MCPP_LIB="mcpp.lib"
	elif [ "${MUMBLE_BUILD_CONFIGURATION}" == "Debug" ]; then
		LIBBZ2_LIB="libbz2d.lib"
		LIBDB_LIB="libdb53d.lib"
		MCPP_LIB="mcppd.lib"
	fi

	export ICE_ARFLAGS="/ignore:4221"
	export ICE_LDFLAGS="user32.lib gdi32.lib dbghelp.lib wsock32.lib ws2_32.lib iphlpapi.lib rpcrt4.lib advapi32.lib crypt32.lib secur32.lib shlwapi.lib ${MCPP_LIB} ${LIBBZ2_LIB} libexpat.lib ${LIBDB_LIB} /LIBPATH:$(cygpath -w ${MUMBLE_PREFIX}/mcpp) /LIBPATH:$(cygpath -w ${MUMBLE_PREFIX}/bzip2/lib) /LIBPATH:$(cygpath -w ${MUMBLE_PREFIX}/expat/lib) /LIBPATH:$(cygpath -w ${MUMBLE_PREFIX}/berkeleydb/lib)"
	export ICE_CPPFLAGS="/DXML_STATIC /I$(cygpath -w ${MUMBLE_PREFIX}/bzip2/include) /I$(cygpath -w ${MUMBLE_PREFIX}/expat/include) /I$(cygpath -w ${MUMBLE_PREFIX}/berkeleydb/include)"
	if [ "${ARCH}" == "x86" ]; then
		export ICE_WIN32_WINNT=0x501
	else
		export ICE_WIN32_WINNT=0x601
	fi

	if [ "${MUMBLE_BUILD_CONFIGURATION}" == "Release" ]; then
		OPTIMIZE_FLAG="OPTIMIZE=yes"
	elif [ "${MUMBLE_BUILD_CONFIGURATION}" == "Debug" ]; then
		OPTIMIZE_FLAG="OPTIMIZE=no"
	fi

	# Build with RELEASEPDBS=yes to have cl.exe generate .pdbs
	cd cpp
	cmd /c ${MUMBLE_NMAKE} /f Makefile.mak PREFIX="$(cygpath -w ${MUMBLE_PREFIX}/ZeroC-Ice)" STATICLIBS=yes ${OPTIMIZE_FLAG} RELEASEPDBS=yes HAS_MFC=no ARFLAGS="${ICE_ARFLAGS}" LDFLAGS="${ICE_LDFLAGS}" CPPFLAGS="${ICE_CPPFLAGS}" ICE_WIN32_WINNT="${ICE_WIN32_WINNT}"
	cd ..
}

function install {
	if [ "${MUMBLE_BUILD_CONFIGURATION}" == "Release" ]; then
		OPTIMIZE_FLAG="OPTIMIZE=yes"
	elif [ "${MUMBLE_BUILD_CONFIGURATION}" == "Debug" ]; then
		OPTIMIZE_FLAG="OPTIMIZE=no"
	fi

	# Perform install with NO_INSTALL_PDBS=yes to avoid having the
	# Makefiles attempt to copy non-existant DLL PDBs.
	# TODO: Fix up zeroc-ice-3.5.0-win32-static.diff to not
	# attempt to install .pdbs for static libraries.
	cd cpp
	cmd /c ${MUMBLE_NMAKE} /f Makefile.mak PREFIX="$(cygpath -w ${MUMBLE_PREFIX}/ZeroC-Ice)" NO_INSTALL_PDBS=yes STATICLIBS=yes ${OPTIMIZE_FLAG} RELEASEPDBS=yes HAS_MFC=no ARFLAGS="${ICE_ARFLAGS}" LDFLAGS="${ICE_LDFLAGS}" CPPFLAGS="${ICE_CPPFLAGS}" ICE_WIN32_WINNT="${ICE_WIN32_WINNT}" install
	cd ..
}
