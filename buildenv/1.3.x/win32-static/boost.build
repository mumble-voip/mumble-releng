#!/usr/bin/env mumble-build
# Copyright 2013-2018 The 'mumble-releng' Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that
# can be found in the LICENSE file in the source tree or at
# <http://mumble.info/mumble-releng/LICENSE>.

urls=(
	"https://s3.amazonaws.com/mumble-releng-distfiles/boost_1_68_0.zip"
	"https://downloads.sourceforge.net/project/boost/boost/1.68.0/boost_1_68_0.zip"
)

digests=(
	"sha1:c4cd90922d22ca17d9b8330441637397395e5812"
	"sha256:3b1db0b67079266c40b98329d85916e910bbadfc3db3e860c049056788d4d5cd"
	"blake2:008accf70eecf31a825a02e7e8675281c4c40eae1100928016fac37544c634352a134cc2eef1a900fe395b90174d58eba55cff744944fea870e96d2863402b3c"
)

function extract {
	unzip -q -o boost_1_68_0.zip
	cd boost_1_68_0
}

function prepare {
	patch -p1 < ${MUMBLE_BUILDENV_ROOT}/patches/boost-1.68.0-msvc-build-fix.patch
}

function build {
	cmd /c bootstrap.bat

	printf "// Automatically added by the Mumble win32-static build environment.\n" >> boost/config/user.hpp
	printf "#define BOOST_AUTO_LINK_TAGGED 1\n" >> boost/config/user.hpp
}

function install {
	# TODO(mkrautz): this is a combined build and install step.
	BOOST_TOOLSET=msvc-${VSVER}
	if [ "${ARCH}" == "x86" ]; then
		BOOST_ADDRESS_MODEL=32
	elif [ "${ARCH}" == "amd64" ]; then
		BOOST_ADDRESS_MODEL=64
	fi

	if [ "${MUMBLE_BUILD_CONFIGURATION}" == "Release" ]; then
		BOOST_VARIANT="release"
	elif [ "${MUMBLE_BUILD_CONFIGURATION}" == "Debug" ]; then
		BOOST_VARIANT="debug"
	fi

	cmd /c b2 architecture=x86 address-model=${BOOST_ADDRESS_MODEL} --toolset=${BOOST_TOOLSET} --prefix=$(cygpath -w "${MUMBLE_PREFIX}/Boost") --without-mpi --without-python --layout=tagged link=static runtime-link=shared threading=multi variant=${BOOST_VARIANT} install
}
