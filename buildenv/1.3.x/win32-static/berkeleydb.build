#!/usr/bin/env mumble-build
# Copyright 2013-2018 The 'mumble-releng' Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that
# can be found in the LICENSE file in the source tree or at
# <http://mumble.info/mumble-releng/LICENSE>.

urls=(
	"https://s3.amazonaws.com/mumble-releng-distfiles/db-5.3.28.tar.gz"
	"https://download.oracle.com/berkeley-db/db-5.3.28.tar.gz"
)

digests=(
	"sha1:fa3f8a41ad5101f43d08bc0efb6241c9b6fc1ae9"
	"sha256:e0a992d740709892e81f9d93f06daf305cf73fb81b545afe72478043172c3628"
	"blake2:5b77a4ec0945fa96ce6c2b452fb4b029295e037fa64d5ff8dcb3b5e01ee3501fd75d9a73b8f5fa54d8907717d93546fbb5348ee70119e877fa2f17d301ecf50d"
)

function extract {
	tar -zxf db-5.3.28.tar.gz
	cd db-5.3.28
}

function prepare {
	patch -p1 < ${MUMBLE_BUILDENV_ROOT}/patches/db-runtime-mtdll.patch
	patch -p1 < ${MUMBLE_BUILDENV_ROOT}/patches/db-runtime-mtdlldbg.patch

	# Set /ARCH:IA32 for MSVS2012+ if we're targetting pure x86.
	if [[ ${VSMAJOR} -gt 10 && "${ARCH}" == "x86" ]]; then
		sed -i -re "s,<ClCompile>,<ClCompile>\n      <EnableEnhancedInstructionSet>NoExtensions</EnableEnhancedInstructionSet>,g" build_windows/VS10/db.vcxproj
	fi
}

function build {
	if [ "${MUMBLE_BUILD_CONFIGURATION}" == "Release" ]; then
		BUILD_CFG="Static Release"
	elif [ "${MUMBLE_BUILD_CONFIGURATION}" == "Debug" ]; then
		BUILD_CFG="Static Debug"
	fi

	cd build_windows
	cmd /c msbuild.exe Berkeley_DB_vs2010.sln /p:Configuration="${BUILD_CFG}" /p:PlatformToolset=${MUMBLE_VSTOOLSET} /target:db
	cd ..
}

function install {
	if [ "${ARCH}" == "x86" ]; then
		VS_PLATFORM="Win32"
	elif [ "${ARCH}" == "amd64" ]; then
		VS_PLATFORM="x64"
	fi

	if [ "${MUMBLE_BUILD_CONFIGURATION}" == "Release" ]; then
		BUILD_CFG="Static Release"
		BUILT_STATIC_LIB="libdb53s.lib"
		TARGET_LIB="libdb53.lib"
	elif [ "${MUMBLE_BUILD_CONFIGURATION}" == "Debug" ]; then
		BUILD_CFG="Static Debug"
		BUILT_STATIC_LIB="libdb53sd.lib"
		TARGET_LIB="libdb53d.lib"
	fi

	cd build_windows
	mkdir -p ${MUMBLE_PREFIX}/berkeleydb/{lib,include}
	cp "${VS_PLATFORM}/${BUILD_CFG}/${BUILT_STATIC_LIB}" "${MUMBLE_PREFIX}/berkeleydb/lib/${TARGET_LIB}"
	cp *.h ${MUMBLE_PREFIX}/berkeleydb/include/
	cd ..
}
